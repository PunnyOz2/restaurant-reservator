{
	"info": {
		"_postman_id": "0e58e42e-228c-499b-96d1-cf3e25f646a6",
		"name": "Restaurant-Reservator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9556760"
	},
	"item": [
		{
			"name": "Restaurants",
			"item": [
				{
					"name": "Get All restaurants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Verify that the \\'data\\' array is present and contains at least one element', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('array');",
									"    pm.expect(responseData.data.length).to.be.at.least(1);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/restaurants",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single restaurants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/restaurants/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{restaurant_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const restaurant_id = response.data.id;\r",
									"pm.environment.set(\"restaurant_id\", restaurant_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"address\": \"somewhere near {{$randomStreetName}}\",\r\n    \"tel\": \"{{$randomPhoneNumber}}\",\r\n    \"openTime\": \"09:00\",\r\n    \"closeTime\": \"22:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('The _id must be a non-empty string', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data._id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"closeTime\": \"21:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{restaurant_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/restaurants/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{restaurant_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservations",
			"item": [
				{
					"name": "Get All reservations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single reservations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create reservations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const reservation_id = response.data._id;\r",
									"pm.environment.set(\"reservation_id\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:restaurantId/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":restaurantId",
								"reservations"
							],
							"variable": [
								{
									"key": "restaurantId",
									"value": "{{restaurant_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update reservations",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reservations",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rating",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rating\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/reservations/:id/rating",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id",
								"rating"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"First Admin\",\r\n    \"email\": \"first@admin.com\",\r\n    \"role\": \"admin\",\r\n    \"password\": \"firstPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.environment.set(\"userID\", pm.response.json()._id)\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"first@admin.com\",\r\n    \"password\": \"firstPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ME",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"6432133721@student.chula.ac.th\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/forgotpassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"forgotpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPassword\": \"ukbiybr2\",\r\n    \"newPassword\": \"6432133721\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/changepassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"changepassword"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Demo",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"demo user\",\r\n    \"email\": \"demo@user.com\",\r\n    \"role\": \"user\",\r\n    \"password\": \"demoPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"userID\", pm.response.json()._id)\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"demo@user.com\",\r\n    \"password\": \"demoPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All restaurants User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									"\r",
									"pm.test(\"Exist some hospitals\", function () {\r",
									"    pm.expect(response.count).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"restaurant_id\", pm.response.json().data[0].id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/restaurants",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single restaurants User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/restaurants/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{restaurant_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create reservations User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const reservation_id = response.data._id;\r",
									"pm.environment.set(\"reservation_id1\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:restaurantId/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":restaurantId",
								"reservations"
							],
							"variable": [
								{
									"key": "restaurantId",
									"value": "{{restaurant_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create reservations User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const reservation_id = response.data._id;\r",
									"pm.environment.set(\"reservation_id2\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:restaurantId/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":restaurantId",
								"reservations"
							],
							"variable": [
								{
									"key": "restaurantId",
									"value": "{{restaurant_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create reservations User 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const reservation_id = response.data._id;\r",
									"pm.environment.set(\"reservation_id3\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:restaurantId/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":restaurantId",
								"reservations"
							],
							"variable": [
								{
									"key": "restaurantId",
									"value": "{{restaurant_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create reservations User 4 Fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:restaurantId/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":restaurantId",
								"reservations"
							],
							"variable": [
								{
									"key": "restaurantId",
									"value": "{{restaurant_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All reservations User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"const response = pm.response.json();",
									"const reservation_id = response.data[0]._id;",
									"pm.environment.set(\"reservation_id\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single reservations User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update reservations User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reservations User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id1}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reservations User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id2}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reservations User 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id3}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create reservations User for Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const reservation_id = response.data._id;\r",
									"pm.environment.set(\"reservation_id\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/restaurants/:restaurantId/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"restaurants",
								":restaurantId",
								"reservations"
							],
							"variable": [
								{
									"key": "restaurantId",
									"value": "{{restaurant_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"userID\", pm.response.json()._id)\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"first@admin.com\",\r\n    \"password\": \"firstPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All reservations Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"const response = pm.response.json();",
									"const reservation_id = response.data[0]._id;",
									"// pm.environment.set(\"reservation_id\", reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update reservations Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reservations Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{reservation_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	}
}
@startuml Update Restaurant (PUT)

' header Sameple VacQ Sequence Diagram
' footer Page %page% of %lastpage%
title "Update Restaurant (PUT)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:restaurants" as restaurantsRouter
participant "<<middleware>>\n:auth" as authMiddleware
participant "<<service>>\n:jwt" as jwtService
participant "<<model>>\n:User" as userModel
database "<<MongoDB>>\n:users" as users
participant "<<controllers>>\n:restaurants" as restaurantsController
participant "<<model>>\n:Restaurant" as restaurantModel
database "<<MongoDB>>\n:restaurants" as RestaurantsDatabase

client->server ++:req.put('/restaurants/:id')
server->restaurantsRouter ++:app.use('/restaurants',restaurantsRouter)

restaurantsRouter -> authMiddleware ++:protect()
authMiddleware -> jwtService ++:verify(token)
jwtService --> authMiddleware --:decoded
authMiddleware -> userModel ++:findById(decoded.id)
userModel -> users ++:UserSchema
users --> userModel --:user
userModel --> authMiddleware --:user
authMiddleware -> restaurantsRouter --:next()

restaurantsRouter -> authMiddleware ++:authorize('admin')
authMiddleware -> restaurantsRouter --:next()

restaurantsRouter->restaurantsController ++:updateRestaurant()
restaurantsController->restaurantModel ++:findByIdAndUpdate(req.params.id, req.body)
restaurantModel ->RestaurantsDatabase ++: RestaurantSchema
RestaurantsDatabase --> restaurantModel --: restaurant
restaurantModel --> restaurantsController --: restaurant
restaurantsController --> client --: response

@enduml